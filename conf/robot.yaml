AdminContact: "David Parsley, <parsley@linuxjedi.org>"

## Configure the robot connection protocol; modifying this could
## break `gopherbot -t`
{{ $proto := env "GOPHER_PROTOCOL" | default "terminal" }}
Protocol: {{ $proto }}

## Protocol-specific configuration
{{ if eq $proto "slack" }}
{{ .Include "slack.yaml" }}
{{ end }}

{{ if eq $proto "terminal" }}
{{ .Include "terminal.yaml" }}
{{ end }}

{{ $botname := env "GOPHER_BOTNAME" | default "data" }}
{{ $botemail := env "GOPHER_BOTMAIL" | default "data@linuxjedi.org" }}
{{ $botfullname := env "GOPHER_BOTFULLNAME" | default "Data Gopherbot" }}
{{ $botalias := env "GOPHER_ALIAS" | default "*" }}

BotInfo:
  UserName: {{ $botname }}
  Email: {{ $botemail }}
  FullName: {{ $botfullname }}
  FirstName: {{ $botname }}
  LastName: Gopherbot

Alias: '{{ $botalias }}'

# Brain configuration; this can all be replaced with static configuration
# and encrypted secrets for most robots.
{{ $brain := env "GOPHER_BRAIN" | default "file" }}
{{ $statedir := env "GOPHER_STATEDIR" | default "state" }}
{{ $defbraindir := printf "%s/brain" $statedir }}
Brain: {{ $brain }}
#EncryptBrain: true # default
{{ if eq $brain "file" }}
BrainConfig:
  BrainDirectory: {{ env "GOPHER_BRAIN_DIRECTORY" | default $defbraindir }}
  Encode: true
{{ else if eq $brain "dynamo" }}
BrainConfig:
  TableName: "your table name here"
  Region: {{ env "GOPHER_BRAIN_REGION" | default "us-east-1" }}
  AccessKeyID: "replace with encrypted value"
  SecretAccessKey: "replace with encrypted value"
{{ end }}
# End brain config

# Defaults for history and workspace directories, relative to the
# process working directory.
{{ $histdir := env "GOPHER_HISTORYDIR" | default "history" }}
{{ $workdir := env "GOPHER_WORKSPACE" | default "workspace" }}
{{ if $workdir -}} WorkSpace: {{ $workdir }} {{- end }}

## Configure a history provider
{{ $history := env "GOPHER_HISTORY_PROVIDER" | default "file" }}
HistoryProvider: {{ $history }}

{{ if eq $history "file" }}
HistoryConfig:
  Directory: {{ $histdir }}
  ## LocalPort here is the full string passed in to ListenAndServe(...)
  #LocalPort: ':9000' # Start http fileserver
  #URLPrefix: 'http://localhost:9000'
{{ end }}
## End history config

## If the plugin doesn't specify an outgoing message format, what's the default?
## This will be 'Raw' (unmodified, subject to protocol-specific formatting) if
## not set. 'Variable' will escape special characters like #, @, _, `, etc. so
## those characters can appear in replies. 'Fixed' will send everything in a
## fixed-width font.
# DefaultMessageFormat: Variable # 'Raw' if not specified

ExternalJobs:
  "ipcheckup":
    Description: Job to check and if needed update DNS
    Path: jobs/ipcheckup.sh
    NameSpace: aws-dns
  "theia":
    AppendParameters:
    - Name: "KUBERNETES_SERVICE_HOST"
      Value: "{{ env "KUBERNETES_SERVICE_HOST" }}"
    - Name: "KUBERNETES_SERVICE_PORT"
      Value: "{{ env "KUBERNETES_SERVICE_PORT" }}"
  "github-poller":
    Description: Job for polling GitHub to see if repositories have been updated
    Path: jobs/github-poller.py
    NameSpace: github
  "quaytrigger":
    Description: Trigger an automated container build on quay.io
    Path: jobs/quaytrigger.sh
    NameSpace: github
    Parameters:
    - Name: "gopherbot_base"
      Value: "{{ decrypt "8XXXDo48wxhNQI5u3G2xQy/KV2omF1PYbfLEHGvnxjsJY9hBVSTZZw/ibFXy+mE2y5pHwI1SrYB2SkSh+JIVVuJtKrmWSPzra6gEj+TwGShhfVfEksCaYXS/dSLlJC4KROHv6z0YJvBRbdAbblPlzT/sbyq4401YRz/i0qnbn8wXLGIFfiNh3gNK3NZxpfkUgkcFFc5NpKQUUCIToh4xv6/iqiGu0JEIR+aHuMrf" }}"
    - Name: "gopherbot_base_theia"
      Value: "{{ decrypt "Z2GWqmaqjTn7avaU6ueCapptniXQBcVwR9CWj70G8xnezQw3tIcXDBevsER7KzBsHDPxMsicyFF8C/smshaa+bEhMxSV4mgNFtjMa/s3mbcPhesQwOZavyz3YW4RlS9iD+jzviLBv/YCK9YTuHmxARqjFPzitaXnXt6ezosLUCfAlwpti0+sUhSQ3E9VWf3NJQHmBNC1slutYPcMSO+dIlwxcgmxOq7gUblkfeJz" }}"
  "alive":
    Description: Job for weekly 'I'm alive' email
    Path: jobs/alive.sh
#   "hello":
#     Description: Trivial hello world job for testing
#     Path: jobs/hello.sh
#     Privileged: true
#     Parameters:
#     - Name: NONCE
#       Value: "No way, Jack!"

ExternalTasks:
  "buildah-login":
    Description: Perform buildah login for container build/push
    Path: tasks/buildah-login.sh
    Parameters:
    - Name: "QUAY"
      Value: "{{ decrypt "rvXAtEYi8AB/7rkfp2JjqM7A1hfduwlljTYBRi0fiSIkL0l7UIh1nGb3DtjLLKPZmFGc30kg7PHlApbPhN0nrVxXPmLXKM/JJ9nzTYV6LdYkwyTOk4sdYj+eUEg=" }}"
    - Name: "LINUXJEDI"
      Value: "{{ decrypt "Fn4jFjnCw4y5pxkS3j53iSezJK/tFqUuXeTPgQVxSR/NM4fdHFCC" }}"

## Most often you don't want your robot to run scheduled jobs
## with the "terminal" connector, normally used for testing and
## development.
{{ if ne $proto "terminal" }}
## Jobs are scheduled with github.com/robfig/cron; includes seconds.
## Note that pause-notifies and backup are scheduled by default in
## a standard robot.
ScheduledJobs:
- Name: pause-notifies
  Schedule: "0 0 8 * * *"
- Name: backup
  Schedule: "@every 1m"
- Name: ipcheckup
  Schedule: "@every 5m"
# - Name: github-poller
#   Schedule: "@every 30s"
- Name: alive
  Schedule: "0 0 9 * * MON"
## Build gopherbot-base container just after 12am Saturday
- Name: quaytrigger
  Schedule: "1 0 0 * * SAT"
  Arguments:
  - "gopherbot-base"
## Build gopherbot-base-theia container just after 6am Saturday
- Name: quaytrigger
  Schedule: "1 0 2 * * SAT"
  Arguments:
  - "gopherbot-base-theia"
## Rebuild gopherbot containers at noon on Saturday
- Name: gopherci
  Schedule: "1 0 4 * * SAT"
  Arguments:
  - "github.com/lnxjedi/gopherbot"
  - "."
## If your robot is logging to a file, this job will rotate logs
# - Name: logrotate
#   Schedule: "5 0 0 * * *"
## Example with arguments
# - Name: hello
#   Schedule: "@every 30s"
#   Arguments: # an array of strings; up to the job to parse numbers & bools
#   - "Hello, World !!!"
{{ end }}

## After adding an initial administrator, you should disable the setup
## plugin by uncommenting the next three lines.
ExternalPlugins:
  "userpods":
    Description: Plugin for starting user pods w/ the Kubernetes API
    Path: plugins/userpod.py
    NameSpace: kube-env
    Parameters:
    - Name: PODLIB_NAMESPACE
      Value: "accord"
    - Name: PODLIB_CONFIG
      Value: "userpod"
    - Name: PODLIB_INCLUSTER
      Value: "true"

## Note that modules for connectors, brains and history providers load automatically
LoadableModules:
  "knock":
    Description: Knock knock jokes!
    Path: goplugins/knock.so
#   "memes":
#     Description: Memes!
#     Path: goplugins/meme.so

NameSpaces:
  "kube-env":
    Parameters:
    # Pass-through env required for kubectl & library
    - Name: "KUBERNETES_SERVICE_HOST"
      Value: "{{ env "KUBERNETES_SERVICE_HOST" }}"
    - Name: "KUBERNETES_SERVICE_PORT"
      Value: "{{ env "KUBERNETES_SERVICE_PORT" }}"
  "github":
    Parameters:
    - Name: "GITHUB_TOKEN"
      Value: "{{ decrypt "hcTTTOrEvo5F0i/iTHki9F2A6rhtHJ7HoFNYqWesfk++oIj1ywC+w4Xtu1BGCQlD4a0VLoeUusKa5RRzmctp4s1NgvA=" }}"
  "aws-dns":
    Parameters:
    - Name: "AWS_ACCESS_KEY_ID"
      Value: "{{ decrypt "xmZ/9hBU6J+0PBc+2N9fVH+C3dwVDjQQkRsa6QKAd+HQK+0oWvoHq4jCMN3qAAIB" }}"
    - Name: "AWS_SECRET_ACCESS_KEY"
      Value: "{{ decrypt "gYarDz0dS1kGc5uncShiEow7EpEaYhRsTC+s9pkpZFWpzc2X6JYeyIoS/qljrWfgSd1VICPCd+SCQ3s2MHCoAkw55S8=" }}"
    - Name: "AWS_REGION"
      Value: "us-east-1"
  "ssh":
    Parameters:
    - Name: "KEYNAME"
      Value: "robot_key"
    - Name: BOT_SSH_PHRASE
      Value: {{ decrypt "Qr83a1QmCh3m26FrWUbP77RExw3GVFqWiXN+PzBH4y+ZKwc+w9UJWfAMrOk=" }}
  "manage":
    # The default standard config defines a bunch of pass-through env vars,
    # so here we use AppendParameters
    AppendParameters:
    - Name: "KEYNAME"
      Value: "manage_key"
    - Name: BOT_SSH_PHRASE
      Value: {{ decrypt "Qr83a1QmCh3m26FrWUbP77RExw3GVFqWiXN+PzBH4y+ZKwc+w9UJWfAMrOk=" }}

DefaultMessageFormat: Raw
# Users the bot should never listen to
#IgnoreUsers: [ "otherbot", "slackbot" ]

## Configuration for sending out email. For Authtype: none, User and Password
## can be left out. Note that sending email will fail if Email isn't set. Note
## for GMail users - for your robot to send email, you'll need to enable less
## secure apps for the sending account. See:
## https://support.google.com/accounts/answer/6010255

MailConfig:
  Mailhost: smtp.gmail.com:587
  Authtype: plain
  User: data@linuxjedi.org
  Password: {{ decrypt "/BdhlA9fTNkuiNdkfwiEQRTv0ceGNOVWqoDbqPUpe++qGrS3VJxJhbMn" }}

## Use Google Authenticator TOTP by default for elevated commands. To use:
## - Ask the robot to 'send launch codes', and it will send you (one time)
##   a string for configuring your Google Authencticator app, and store it's
##   own copy in the robot's brain. You can verify it works with the
##   'check launch code <code>' command.
## - To require a token to be provided before running a given plugin command,
##   add the elevated command(s) to the plugin's ElevatedCommands list, or to
##   ElevateImmediateCommands for commands that require elevation every time
##   regardless of timeout.
## - Configure the elevator by overriding the config for the plugin in
##   'conf/plugins/totp.yaml'

# DefaultElevator: totp
